apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: analysis
      name: analysis
    spec:
      ports:
        - name: "8100"
          port: 8100
          targetPort: 8100
      selector:
        io.kompose.service: analysis
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: auth
      name: auth
    spec:
      ports:
        - name: "8200"
          port: 8200
          targetPort: 8200
      selector:
        io.kompose.service: auth
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: backend
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      ports:
        - name: "8091"
          port: 8091
          targetPort: 8091
      selector:
        io.kompose.service: frontend
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      name: mongodb
    spec:
      ports:
        - name: "27017"
          port: 27017
          targetPort: 27017
      selector:
        io.kompose.service: mongodb
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb
      name: mysqldb
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: mysqldb
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: results
      name: results
    spec:
      ports:
        - name: "5000"
          port: 5000
          targetPort: 5000
      selector:
        io.kompose.service: results
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: storage
      name: storage
    spec:
      ports:
        - name: "8090"
          port: 8090
          targetPort: 8090
      selector:
        io.kompose.service: storage
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: analysis
      name: analysis
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: analysis
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: analysis
        spec:
          containers:
            - image: richard2000wang/project1:analysis
              name: analysis
              ports:
                - containerPort: 8100
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: project1
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/project1: "true"
      podSelector:
        matchLabels:
          io.kompose.network/project1: "true"
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: auth
      name: auth
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: auth
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: auth
        spec:
          containers:
            - image: richard2000wang/project1:latest
              name: auth
              ports:
                - containerPort: 8200
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: backend
      name: backend
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: backend
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: backend
        spec:
          containers:
            - image: richard2000wang/project1:backend
              name: backend
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: frontend
      name: frontend
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: frontend
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: frontend
        spec:
          containers:
            - image: richard2000wang/project1:frontend
              name: frontend
              ports:
                - containerPort: 8091
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
      name: mongodb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mongodb
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: mongodb
        spec:
          containers:
            - image: mongo:latest
              name: mongodb
              ports:
                - containerPort: 27017
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb
      name: mysqldb
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mysqldb
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: mysqldb
        spec:
          containers:
            - env:
                - name: MYSQL_ROOT_PASSWORD
                  value: ACIT2022!3910
              image: mysql
              name: mysqldb
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /docker-entrypoint-initdb.d/database.sql
                  name: mysqldb-claim0
          restartPolicy: Always
          volumes:
            - name: mysqldb-claim0
              persistentVolumeClaim:
                claimName: mysqldb-claim0
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb-claim0
      name: mysqldb-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: results
      name: results
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: results
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: results
        spec:
          containers:
            - image: richard2000wang/project1:latest
              name: results
              ports:
                - containerPort: 5000
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: storage
      name: storage
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: storage
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose.yml -o kubernetes.yaml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.network/project1: "true"
            io.kompose.service: storage
        spec:
          containers:
            - image: richard2000wang/project1:storage
              name: storage
              ports:
                - containerPort: 8090
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

